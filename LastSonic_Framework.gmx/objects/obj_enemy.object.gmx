<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_homable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_enemy_explosion,1,false)
instance_create(x,y,obj_explosion_small)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy()
obj_Sonic.game_score += 100
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !canHit
{
    if hspeed &gt;= 0
        image_angle += 45
    else 
        image_angle -= 45
    if collision_circle(x,y-5,8,obj_walls,true,true)
        instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Sonic">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.sprp == spr_Sonic_spinjump) &amp;&amp; !other.ground
{
    if other.action == 4
    {
        other.image_i = 0
        other.action = 10
        
        
            other.sprp = choose(spr_Sonic_trick1,spr_Sonic_trick2,spr_Sonic_trick3)
        
        
        canHit = false
        hspeed = other.xdir*other.hspeed*cos(degtorad(point_direction(obj_Sonic.x,obj_Sonic.y,x,y)))*0.5
        vspeed = other.vspeed*sin(-degtorad(point_direction(obj_Sonic.x,obj_Sonic.y,x,y)))*0.5
        other.hsp = 0
        other.vsp = -6.5
        alarm[0] = 30
        
        
        
            audio_play_sound(choose(snd_SonicAttack1,snd_SonicAttack2,snd_SonicAttack3),1,false)
        
    }
    else
    {
        other.vsp = -other.vsp;
        instance_destroy()
        obj_Sonic.game_score += 200
    }
    if instance_exists(obj_hominglock)
    {
        with(obj_hominglock)
        {
            instance_destroy()
            obj_Sonic.game_score += 200*2
        }
    }
    audio_play_sound(choose(snd_enemy_hit1,snd_enemy_hit2,snd_enemy_hit3),1,false)
}
else if other.action == 2 || other.action == 18 || other.action == 29
{
    instance_destroy()
    obj_Sonic.game_score += 500
}
else if canHit &amp;&amp; other.canHit
{
    if other.rings &gt; 0
    {
        other.image_i = 0
        other.ground = false
        other.action = 22
        other.vsp = -4
        other.hsp = -5*other.xdir
        other.canHit = false
        other.hitInvincible = 240
        scatter_rings()
    }
    else
    {
        other.image_i = 0
        other.ground = false
        other.action = 26
        other.vsp = -4
        other.hsp = -5*other.xdir
        other.canHit = false
        other.alarm3 = 120
        obj_HUD_ingame.show = false
    }
}
vibrate_xbox_controller(10)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
