<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_test</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create event

instance_create(x,y,obj_player_camera); // Camera

upixelH = shader_get_uniform(pixelOutShade,"pixelH");
upixelW = shader_get_uniform(pixelOutShade,"pixelW");

texelW = texture_get_texel_width(sprite_get_texture(sprite_index, 0));
texelH = texture_get_texel_height(sprite_get_texture(sprite_index, 0));

hsp = 0;
vsp = 0;
hspm = 6;
hspl = 16;
vspl = 16;

jmp = -6.5;
sjmp = -4;

acc = 0.046875;
dcc = 0.5;
frc = 0.046875;
grv = 0.21875;

ground = false;

acos = 1;
asin = 0;

angle = 0;
action = 0;
adrag = 0.96875;
bfr = 0.023475;
bdcc = 0.1484375;
vfr = 0.21875;
xdir = 1;
xlayer = 0;

/*
sp = 0;
spot = 0;

image_index = 0;
sprite_index = 0;
image_speed = 0;

sprp = spr_classic_stand;
frame = 0;
image_i = 0;
last_action = 0;
*/
input_mode = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// step event

//check input
if keyboard_check(vk_anykey)
    input_mode = 0
if check_xbox_controller()
    input_mode = 1

p_physics();
p_move();

if collision_circle(x,y,17,obj_t_background,true,false) // Background
{
    xlayer = 0;
}

if collision_circle(x,y,17,obj_t_foreground,true,false) // Foreground
{
    xlayer = 1;
}

if collision_circle(x,y,17,obj_t_switch,true,false) // Switch
{
    if hsp &gt; 0 &amp;&amp; ground
    xlayer = 0;
    if hsp &lt; 0 &amp;&amp; ground
    xlayer = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_white);
draw_set_font(global.test_font);
draw_set_halign(fa_left);

draw_text(16, 240, "Frames: "+string(fps)+" / 60");

draw_set_halign(fa_center);
draw_text(480/2, 16, "Far from Complete");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shader_set(pixelOutShade);
shader_set_uniform_f(upixelW, texelW);
shader_set_uniform_f(upixelH, texelH);
draw_self();
shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
