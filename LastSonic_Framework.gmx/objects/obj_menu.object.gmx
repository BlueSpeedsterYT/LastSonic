<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu_x = x;
menu_y = y;
button_h = 32;

//buttons
button[0] = "Start Game";
button[1] = "Game Options";
button[2] = "Quit Game";
buttons = array_length_1d(button);

menu_index = 0;
last_selected = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

menu_move = (keyboard_check_pressed(vk_down) or gamepad_axis_value(0,gp_axislv)&gt;0 or gamepad_button_check_pressed(0,gp_padd)) - (keyboard_check_pressed(vk_up) or gamepad_axis_value(0,gp_axislv)&lt;0 or gamepad_button_check_pressed(0,gp_padu));

menu_index += menu_move;
if (menu_index &lt; 0) menu_index = buttons - 1;
if (menu_index &gt; buttons -1) menu_index = 0;

if (menu_index != last_selected) audio_play_sound(snd_menu_switch,1,false);

last_selected = menu_index;

if (keyboard_check_pressed(ord('Z')) || gamepad_button_check_pressed(0,gp_face1))
{
    switch(menu_index){
    
        case 0:
            audio_stop_sound(snd_menu_accept);
            audio_play_sound(snd_menu_accept,1,false);
            show_debug_message("Game Access not added.");
            break;

        case 1:
            audio_stop_sound(snd_menu_accept);
            audio_play_sound(snd_menu_accept,1,false);
            show_debug_message("Options Menu not added.");
            break;    
            
        case 2:
            audio_stop_all();
            instance_create(0,0,obj_resultscreen_blackfadein);
            break;
    }
}

if (keyboard_check_pressed(vk_backspace) || gamepad_button_check_pressed(0,gp_face2)){
    instance_create(0,0,obj_blackblank_fadein_back);
    audio_stop_all();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var i = 0;
repeat(buttons) {
    draw_set_font(fnt_menu);
    draw_set_halign(fa_right);
    draw_set_valign(fa_middle);
    draw_set_color(c_ltgray);
    
    xx = menu_x
    yy = menu_y + button_h * i
    
    if (menu_index == i) draw_set_color(c_red);
    
    draw_text(xx+360,yy+24, button[i]);
    i++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
